# state model

```
states:
- WAITING_FOR_OPPONENT
- WAITING_FOR_READY
- IN_GAME_CHOOSING
- ROUND_OVER
- GAME_OVER


{
	gameState: {
		state: <string>,
		round: <number>,
		maxRounds: <number>,
		matchResult: <string>
	},
	playerState: {
		opponent: {
			choice/handsign: <string>,
			score: <number>,
			wins: <number>,
			losses: <number>
		},
		me: {
			choice/handsign: <string>,
			score: <number>,
			wins: <number>,
			losses: <number>
		}
	}
}
```

#### Components will render conditionally based on game.state
